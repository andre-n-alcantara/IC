Olimpíada Brasileira de Informática - OBI2020 — Prog. Nível Júnior — Fase Local 3

Entrega de Caixas

Nome do arquivo: “caixas .x”, onde x deve ser c, cpp, pas, java, js, py2 ou py3

Você precisa transportar três caixas vazias usando um drone que pode levantar uma caixa por vez
apenas em cada viagem. Quer dizer, sempre dá para transportar as três caixas vazias fazendo três
viagens do drone. Mas talvez dê para fazer menos do que três viagens, se for possível colocar uma
caixa dentro de outra. As caixas têm formato de cubo e a única restrição para uma caixa ser
colocada dentro de outra é o tamanho, não importando o peso.

Uma caixa de tamanho X pode ser colocada dentro de uma caixa de tamanho Y se X < Y. Note,
portanto, que uma caixa não cabe dentro de outra do mesmo tamanho. Além disso, duas caixas
de tamanhos X e Y podem ser colocadas, lado a lado, dentro de uma caixa de tamanho Z se
(X+Y)<zZ.

A figura ilustra as quatro configurações possíveis para o drone fazer uma viagem.

oa

Neste problema, os tamanhos das três caixas são dados em ordem crescente e seu programa deve
computar o número mínimo de viagens que o drone pode fazer para transportar todas as três caixas.

Entrada

A primeira linha da entrada contém um inteiro 4. A segunda linha da entrada contém um inteiro
B. A terceira linha da entrada contém um inteiro C. Os três inteiros representam os tamanhos das
três caixas.

Saída

Seu programa deve imprimir uma linha contendo um inteiro, representando o número mínimo de
viagens que o drone pode fazer para transportar todas as três caixas.

Restrições

eciI<A<B<C<ãhI1000

Exemplos

Exemplo de entrada 1 Exemplo de saída 1

12 1
45
188

Exemplo de entrada 2 Exemplo de saída 2

67 3
67
67

 Olimpíada Brasileira de Informática - OBI2020

Prog. Nível Júnior - Fase Local

Exemplo de entrada 3

111
463
463

Exemplo de saída 3

2

Exemplo de entrada 4

72
72
345

Exemplo de saída 4

1

Exemplo de entrada 5

30
30
55

Exemplo de saída 5

2

