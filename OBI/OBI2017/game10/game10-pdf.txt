Olimpíada Brasileira de Informática - OBI2017 2

Game-10

Nome do arquivo: game10.c, game10.cpp, gamei0.pas, gameiO. java, gameiO.js ou gamelO.py

No princípio dos anos 1980 surgiram nos colégios os pri-
meiros relógios de pulso digitais com joguinhos. Era uma
febre entre os alunos e quem tinha um era muito popular
na hora do recreio. Os joguinhos eram bem simples, mas

. . Naa A0o0o0o0o0o0o0Da
muito legais. Um dos primeiros era o Game-10, no qual

EEERUDDODDOO

visor. Na parte esquerda aparecia um disco voador em
qualquer uma de três posições, aleatoriamente, e lançava
um míssil. O objetivo do jogador era movimentar o avião
verticalmente para que ficasse na frente do disco voador
(na mesma linha horizontal, do lado direito) e atirar para
interceptar o míssil antes que esse atingisse o avião.

Do0o0o0o000000

você controlava um avião que aparecia na parte direita do 7

Como o movimento do avião era feito com apenas um botão, só dava para movimentar em um
sentido: ao apertar o botão sucessivas vezes, o avião se movia na sequência de posições 1 52 5
35152535 1--: Veja que, na situação da figura, o jogador deveria apertar o botão apenas
uma vez, para ir da posição 1 para a posição 2, e conseguir atirar e interceptar o míssil.

Neste problema vamos considerar que existem N posições e não apenas três. Dado o número de
posições N, a posição D na qual o disco voador aparece, e a posição 4 onde está o avião, seu
programa deve computar o número mínimo de vezes que o jogador precisa apertar o botão para
movimentar o avião até a mesma posição do disco voador e poder atirar!

Entrada

A primeira linha da entrada contém um inteiro N, o número de posições. A segunda linha contém
um inteiro D, a posição do disco voador. A terceira linha contém um inteiro 4, a posição do avião.

Saída

Seu programa deve imprimir uma linha contendo um inteiro, o número mínimo de vezes que o
jogador deve apertar o botão para poder atirar.

Restrições

e3<N<h100
e1I<D,A<N

Exemplos

Entrada Saída

3 1
2
1

Entrada Saída
20 15

13

