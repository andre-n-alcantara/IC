Estágio
Arquivo fonte: estagio.c, estagio.cc, estagio.cpp ou estagio.pas

Você conseguiu um estágio para trabalhar como programador na secretaria da sua escola. Como
primeira tarefa, Dona Vilma, a coordenadora, solicitou que você aprimore um programa que foi
desenvolvido pelo estagiário anterior. Esse programa tem como entrada uma lista de nomes e de
médias finais dos alunos de uma turma, e determina o aluno com a maior média na turma. Dona
Vilma pretende utilizar o programa para premiar o melhor aluno de cada turma da escola. O pro-
grama desenvolvido pelo estagiário anterior encontra-se nas páginas a seguir (programa Pascal na
página 5, programa C na página 6, programa C++ na página 7).

Como você pode verificar, o programa na forma atual tem uma imperfeição: no caso de haver alu-
nos empatados com a melhor média na turma, ele imprime apenas o primeiro aluno que aparece
na lista.

1. Tarefa

Dona Vilma deseja que você altere o programa para que ele produza uma lista com todos os alu-
nos da turma que obtiveram a maior média, e não apenas um deles. Você consegue ajudá-la nesta
tarefa?

2. Entrada

A entrada é constituída de vários conjuntos de teste, representando várias turmas. A primeira
linha de um conjunto de testes contém um número inteiro N (1 < N < 1000) que indica o total de
alunos na turma. As N linhas seguintes contêm, cada uma, um par de números inteiros C (1<C
< 20000) eM (0 <M < 100), indicando respectivamente o código e a média de um aluno. O final
da entrada é indicado por uma turma com N = 0.

Exemplo de Entrada

3

185

2 91

3 73

5

12300 81
12601 99
15023 76
10111 99
212 99
(o)

3. Saída

Para cada turma da entrada seu programa deve produzir três linhas na saída. A primeira linha deve
conter um identificador do conjunto de teste, no formato “Turma n”, onde n é numerado a partir
de 1. A segunda linha deve conter os códigos dos alunos que obtiveram a maior média da turma.
Os códigos dos alunos devem aparecer na mesma ordem da entrada, e cada um deve ser seguido
de um espaço em branco. A terceira linha deve ser deixada em branco. O formato mostrado no

OB12003 - página 4
 exemplo de saída abaixo deve ser seguido rigorosamente.

Exemplo de Saída

Turma 1
2

Turma 2
12601 10111 212

(esta saída corresponde ao exemplo de entrada acima)

4. Restrições

0<N< 1000 (N = 0 apenas para indicar o fim da entrada)
1<C<20000
0<M< 100

Programa em Pascal:

program estagio;

const MAX ALUNOS = 1000;
type
registro aluno = record
codigo, media : integer;
end;
var
alunos : array[1..MAX ALUNOS] of registro aluno;
n, i, indice melhor, turma : integer;
begin
readin(n); ( le numero de alunos da primeira turma 3
turma := 1;
while n > 0 do begin
for i :=1 tondo (le dados dos alunos 3
readin(alunos[i].codigo, alunos[i].media);
indice melhor := 1;
for i := 2 ton do € procura aluno de maior media 3
if alunos[i].media > alunos[indice melhor].media then
indice melhor := i;
ft escreve resposta )
writeln('Turma ', turma);
turma := turma + 1;
writeln(alunos[indice melhor].codigo);
writeln;
€ le numero de alunos da proxima turma 3
readin(n);
end;

OB12003 - página 5
 Programa em C:

Hinclude <stdio.h>
ádefine MAX ALUNOS 1000

int main()

ft
int i, indice melhor, n;
int turma=1;
struct

[
int codigo, media;
> alunos[MAX ALUNOS];
/* le numero de alunos da primeira turma */
scanf("%d", &n);
while (n > 0)
f
/* le dados dos alunos */
for (i = 0, i<n, i++)
scanf("%d %d", &alunos[i].codigo, &alunos[i].media);
/* procura aluno de maior media */
indice melhor = 0;
for (i=1, i<n, i++)
if (alunos[i].media > alunos[indice melhor].media)
indice melhor = i;
/* escreve resposta */
printf("Turma %dNn%dNnAn", turma++, alunos[indice melhor].codigo);
/* le numero de alunos da proxima turma */
scanf("wd", &n);

;

return 0;

;

OB12003 - página 6
 Programa em C++:

Hinclude <iostream>

const int MAX ALUNOS = 1000;

int main()

f

;

int
int

i, indice melhor, n;
turma=1;

struct

f

int codigo, media;
> alunos[MAX ALUNOS];

// 1e numero de alunos da primeira turma

cin

>> n;

while (n > 0)

f

;

// 1e dados dos alunos
for (i = 0, i<n, i++)
cin >> alunos[i].codigo >> alunos[i].media;
// procura aluno de maior media
indice melhor = 0;
for (i=1, i<n, i++)
if (alunos[i].media > alunos[indice melhor].media)
indice melhor = i;
// escreve resposta
cout << "Turma " << turma++ << "An";
cout << alunos[indice melhor].codigo << "nin";

// le numero de alunos da proxima turma
cin >> n;

return 0;

OB12003 - página 7
