OBI2003 - página 40Estágio
Arquivo fonte: estagio.c, estagio.cc, estagio.cpp ou estagio.pasVocê conseguiu um estágio para trabalhar como programador na secretaria da sua escola. Comoprimeira tarefa, Dona Vilma, a coordenadora, solicitou que você aprimore um programa que foidesenvolvido pelo estagiário anterior. Esse programa tem como entrada uma lista de nomes e demédias ﬁnais dos alunos de uma turma, e determina o aluno com a maior média na turma. DonaVilma pretende utilizar o programa para premiar o melhor aluno de cada turma da escola. O pro-grama desenvolvido pelo estagiário anterior encontra-se nas páginas a seguir (programa Pascal napágina 5, programa C na página 6, programa C++ na página 7).Como você pode veriﬁcar, o programa na forma atual tem uma imperfeição: no caso de haver alu-nos empatados com a melhor média na turma, ele imprime apenas o primeiro aluno que aparecena lista. 
1. Tarefa
Dona Vilma deseja que você altere o programa para que ele produza uma lista com todos os alu-nos da turma que obtiveram a maior média, e não apenas um deles. Você consegue ajudá-la nestatarefa?
2. Entrada
A entrada é constituída de vários conjuntos de teste, representando várias turmas. A primeiralinha de um conjunto de testes contém um número inteiro N (1 ≤ N ≤ 1000) que indica o total dealunos na turma. As N linhas seguintes contêm, cada uma,  um par de números  inteiros C  (1 ≤ C≤ 20000) e M  (0 ≤ M ≤ 100), indicando  respectivamente o código e a média de um aluno. O ﬁnalda  entrada é indicado por uma turma com N = 0.Exemplo de Entrada31 852 913 73512300 8112601 9915023 7610111 99212 990
3. Saída
Para cada turma da entrada seu programa deve produzir três linhas na saída. A primeira linha deveconter um identiﬁcador do conjunto de teste, no formato “Turma n”, onde n é numerado a partirde 1. A segunda linha deve conter os códigos dos alunos que obtiveram a maior média da turma.Os códigos dos alunos devem aparecer na mesma ordem da entrada, e cada um deve ser seguidode um espaço em branco. A terceira linha deve ser deixada em branco. O formato mostrado noOBI2003 - página 5exemplo de saída abaixo deve ser seguido rigorosamente.Exemplo de SaídaTurma 12Turma 212601 10111 212(esta saída corresponde ao exemplo de entrada acima)
4. Restrições
0 ≤ N ≤ 1000 (N = 0 apenas para indicar o ﬁm da entrada)1≤C≤200000 ≤ M ≤ 100Programa em Pascal:
program estagio;const MAX_ALUNOS = 1000;type   registro_aluno = record                       codigo, media : integer;                    end;             var   alunos : array[1..MAX_ALUNOS] of registro_aluno;   n, i, indice_melhor, turma :  integer;begin   readln(n); { le numero de alunos da primeira turma }   turma := 1;   while n > 0 do begin      for i := 1 to n do { le dados dos alunos }         readln(alunos[i].codigo, alunos[i].media);      indice_melhor := 1;      for i := 2 to n do { procura aluno de maior media }         if alunos[i].media > alunos[indice_melhor].media then            indice_melhor := i;      { escreve resposta }      writeln('Turma ', turma);      turma := turma + 1;      writeln(alunos[indice_melhor].codigo);      writeln;      { le numero de alunos da proxima turma }      readln(n);   end;end.     
 OBI2003 - página 6Programa em C:
#include <stdio.h>#define MAX_ALUNOS 1000int main(){  int i, indice_melhor, n;  int turma=1;  struct   {    int codigo, media;  } alunos[MAX_ALUNOS];  /* le numero de alunos da primeira turma */  scanf("%d", &n);  while (n > 0)    {      /* le dados dos alunos */      for (i = 0; i < n; i++)        scanf("%d %d", &alunos[i].codigo, &alunos[i].media);      /* procura aluno de maior media */      indice_melhor = 0;      for (i = 1; i < n; i++)        if (alunos[i].media > alunos[indice_melhor].media)            indice_melhor = i;      /* escreve resposta */      printf("Turma %d\n%d\n\n", turma++, alunos[indice_melhor].codigo);      /* le numero de alunos da proxima turma */      scanf("%d", &n);    }  return 0;}OBI2003 - página 7Programa em C++:
#include <iostream>const int MAX_ALUNOS = 1000;int main(){  int i, indice_melhor, n;  int turma=1;  struct   {    int codigo, media;  } alunos[MAX_ALUNOS];  // le numero de alunos da primeira turma   cin >> n;  while (n > 0)    {      // le dados dos alunos      for (i = 0; i < n; i++)        cin >> alunos[i].codigo >> alunos[i].media;      // procura aluno de maior media      indice_melhor = 0;      for (i = 1; i < n; i++)        if (alunos[i].media > alunos[indice_melhor].media)            indice_melhor = i;      // escreve resposta      cout << "Turma " << turma++ << "\n";      cout << alunos[indice_melhor].codigo << "\n\n";      // le numero de alunos da proxima turma       cin >> n;    }  return 0;}