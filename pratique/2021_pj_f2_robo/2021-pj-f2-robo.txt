

Robô

Um fazendeiro comprou um robô-espantalho para espantar os pássaros de
sua plantação de milho. O robô se move ao longo de um caminho que
circunda a plantação. No caminho há N estações numeradas sequencialmente,
a partir de 1, no sentido horário. A figura abaixo
mostra um exemplo com oito estações.


O robô inicia cada dia na estação número 1, e então obedece a uma
sequência de comandos.  Os comandos são gerados por um algoritmo de
aprendizagem de máquina que coleta informações através de sensores
espalhados na plantação, para garantir uma cobertura de vigia
máxima. Cada comando faz com que o robô se mova para outra estação,
vizinha à estação em que ele se encontra, ou no sentido horário ou no
sentido anti-horário. O robô permanece nessa nova estação até receber
um novo comando.

Apesar da promessa de que o robô protegeria a plantação, ao final de
um determinado dia o fazendeiro notou que parte de sua plantação
estava devastada por pássaros. O fazendeiro agora quer entender melhor
o que aconteceu.

Dados o número da estação mais próxima à área devastada e a sequência
de comandos que o robô obedeceu naquele dia, escreva um programa para
determinar quantas vezes o robô permaneceu na estação mais próxima à
àrea devastada.


Entrada
A primeira linha contém três inteiros N, C e S, representando
  respectivamente o número de estações, o número de comandos e o
  número da estação mais próxima à área devastada.  A segunda linha
  contém C inteiros X1, X2, …, XC, representando a
  sequência de comandos recebidos pelo robô.  Para i = 1, 2, …,
  C, se Xi é 1 então o i-ésimo comando significa "mova-se
  para a próxima estação no sentido horário", enquanto se Xi é
  -1 então o i-ésimo comando significa "mova-se para a próxima
  estação no sentido anti-horário".  O robô sempre inicia na estação
  número 1.


Saída
Seu programa deve produzir uma única linha, contendo um
  único inteiro, o número de vezes que o robô permaneceu na estação
  número S durante o dia.

Restrições

 2  ≤  N  ≤  100
   1  ≤  C  ≤  1000

Exemplos



Entrada

8 8 3
1 -1 1 1 1 -1 1 1



Saída

2
	



 



Entrada

5 4 1
1 1 1 1



Saída

1
	



 



Entrada

2 1 1
1



Saída

1
	



 



Entrada

2 1 2
1



Saída

1
	



 



Entrada

2 2 1
-1 1



Saída

2
	



 



Entrada

2 2 1
-1 -1



Saída

2
	



 
